# recursive program to find the occurences of a substring in a sequence
def findMotif(sequence, motif, index=0):

  try:
    found_index = sequence.index(motif, index, len(sequence))

    # here we start at index 1 onwards unlike the usual 0
    print(found_index + 1, end=" ")

    # start at index 0 and then keep changing the index till we reach the end
    findMotif(sequence, motif, found_index + 1)

  # we exit the program when we get a value error from not finding the substring
  except ValueError:
    return

# Sample input
sequence = "TGTAAGACAGCAACGACGTATGACGTATTGTGGGCGACGTATTGACGTATGAGACGTATTGTTCATCAGACGTATGACGTATGACGTATTGACGTATAGACGTATCGAAGGACGTATGACGTATGACGTATGACGTATCACATCACGACGTATGCGCGGACGTATCTGACGTATGACGTATGACGTATGATGACGTATACAGGCAGTGACGTATGGACGTATGACGTATCCCTGGGACGTATACTACGACGTATGACGTATGACGTATGTAGACGTATAAGACGTATGGACGTATAGACGTATGGGCTTCCCTGGACGTATTGACGTATGACGTATTGGAGACGTATGACGTATTGGACGTATGACGTATCGCGACGTATAAGACGTATGCGACGTATCACGACGTATACCGAGACGTATACGACGTATGCAGACGTATGACGTATCGACGTATCGACGTATGACGTATCTGACGTATGACGTATGACGTATCTCGACGTATTAGTTGAACGACGTATCGACGTATGCGTACGACGTATGGTCAAATAGACGTATGACGTATGACGTATACACGCGACGTATCCAGGGGACGTATAGACGTATGACGTATCTGGGACGTATTGGGATTGTAATCTTAAGGACGTATCGACGTATAAGACGTATGACGTATGACGTATGACGTATAATTGACGTATTTGACGTATGAGCAGACGTATATTATGACGTATGCGACGTATTGACGTATTGACGTATCAATAATGGACTACTGACGTATGTTGACGTATTAGGACGTATGACGTATAGACGTATTAGGACGTAT"
motif = "GACGTATGA"


findMotif(sequence, motif, 0)

# Output:
# 15 44 69 76 111 118 125 168 175 182 216 248 255 323 341 357 433 456 472 479 549 556 597 657 664 671 698 789 
