🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟❓ Question ❓🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟

LAB

Estimated time
30-60 minutes

Level of difficulty
Easy

Objectives
improving the student's skills in operating with strings;
converting strings into lists, and vice versa.
Scenario
An anagram is a new word formed by rearranging the letters of a word, using all the original letters exactly once. For example, the phrases "rail safety" and "fairy tales" are anagrams, while "I am" and "You are" are not.

Your task is to write a program which:

asks the user for two separate texts;
checks whether, the entered texts are anagrams and prints the result.
Note:

assume that two empty strings are not anagrams;
treat upper- and lower-case letters as equal;
spaces are not taken into account during the check - treat them as non-existent
Test your code using the data we've provided.

Test data
Sample input:

Listen
Silent

Sample output:

Anagrams


Sample input:

modern
norman

Sample output:

Not anagrams

🔥🔥🔥🔥🔥🔥🔥🔥🔥✅ Answer ✅🔥🔥🔥🔥🔥🔥🔥🔥🔥

def anagramChecker(first, second):
    
    # convert to lowercase and replace whitespaces
    first = first.lower().replace(" ", "")
    second = second.lower().replace(" ", "")
    
    # convert the second into a list
    second_list = list(second)
    
    
    for char in first:
        if char in second_list:
            # find the index of the char in the list
            index_char = second_list.index(char)
            
            # remove the found element from the list as we need occurences
            del second_list[index_char]
            
        else:
            print("Not anagrams")
            return False
    
    print("Anagrams")
    return True
    
    
first = input("Enter the first string: ")
second = input("Input the second string: ")

anagramChecker(first, second)

# Output:
    
# Enter the first string: Listen
# Input the second string: Silent
# Anagrams
# Enter the first string: modern
# Input the second string: norman
# Not anagrams

